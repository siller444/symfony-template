services:
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    image: nginx:latest
    volumes:
      - type: bind
        source: "./nginx/nginx.conf"
        target: "/etc/nginx/conf.d/default.conf"
        read_only: true
      - type: bind
        source: "../"
        target: "/code"
        read_only: false
    ports:
      - ":80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ttt.rule=Host(`ttt.localhost`)"
    networks:
      - traefik
    depends_on: 
      - fpm

  fpm:
    container_name: ${COMPOSE_PROJECT_NAME}-fpm
    build:
      context: "../"
      dockerfile: "./docker/fpm/Dockerfile"
    volumes:
      - "../:/code"
    entrypoint: ./docker/fpm/entrypoint.sh
    working_dir: "/code"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9000:9000"
    networks:
      - traefik

  db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres:17.5
    restart: always
    volumes:
      - "./db/db-data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  traefik:
    name: traefik
    external: true
